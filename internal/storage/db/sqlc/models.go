// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	dto "github.com/b0nbon1/stratal/internal/storage/db/dto"
	"github.com/jackc/pgx/v5/pgtype"
)

type Job struct {
	ID          pgtype.UUID        `json:"id"`
	UserID      pgtype.UUID        `json:"user_id"`
	Name        string             `json:"name"`
	Description pgtype.Text        `json:"description"`
	Source      string             `json:"source"`
	RawPayload  []byte             `json:"raw_payload"`
	CreatedAt   pgtype.Timestamptz `json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `json:"updated_at"`
}

type JobRun struct {
	ID           pgtype.UUID        `json:"id"`
	JobID        pgtype.UUID        `json:"job_id"`
	Status       pgtype.Text        `json:"status"`
	StartedAt    pgtype.Timestamp   `json:"started_at"`
	FinishedAt   pgtype.Timestamp   `json:"finished_at"`
	ErrorMessage pgtype.Text        `json:"error_message"`
	TriggeredBy  pgtype.Text        `json:"triggered_by"`
	Metadata     []byte             `json:"metadata"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
}

type Secret struct {
	ID             pgtype.UUID        `json:"id"`
	UserID         pgtype.UUID        `json:"user_id"`
	Name           string             `json:"name"`
	EncryptedValue string             `json:"encrypted_value"`
	CreatedAt      pgtype.Timestamptz `json:"created_at"`
	UpdatedAt      pgtype.Timestamptz `json:"updated_at"`
}

type Task struct {
	ID        pgtype.UUID        `json:"id"`
	JobID     pgtype.UUID        `json:"job_id"`
	Name      string             `json:"name"`
	Type      string             `json:"type"`
	Config    dto.TaskConfig     `json:"config"`
	Order     int32              `json:"order"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	UpdatedAt pgtype.Timestamptz `json:"updated_at"`
}

type TaskLog struct {
	ID        int64            `json:"id"`
	TaskRunID pgtype.UUID      `json:"task_run_id"`
	Timestamp pgtype.Timestamp `json:"timestamp"`
	Stream    string           `json:"stream"`
	Message   string           `json:"message"`
}

type TaskRun struct {
	ID           pgtype.UUID        `json:"id"`
	JobRunID     pgtype.UUID        `json:"job_run_id"`
	TaskID       pgtype.UUID        `json:"task_id"`
	Status       pgtype.Text        `json:"status"`
	StartedAt    pgtype.Timestamp   `json:"started_at"`
	FinishedAt   pgtype.Timestamp   `json:"finished_at"`
	ExitCode     pgtype.Int4        `json:"exit_code"`
	Output       pgtype.Text        `json:"output"`
	ErrorMessage pgtype.Text        `json:"error_message"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
}

type User struct {
	ID           pgtype.UUID        `json:"id"`
	Email        string             `json:"email"`
	Name         pgtype.Text        `json:"name"`
	PasswordHash string             `json:"password_hash"`
	CreatedAt    pgtype.Timestamptz `json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `json:"updated_at"`
}
